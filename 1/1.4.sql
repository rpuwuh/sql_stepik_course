-- Все запросы в данном уроке будут формулироваться для таблицы book(создание, заполнение):
-- 
-- book_id	title	author	price	amount
-- INT PRIMARY KEY AUTO_INCREMENT	VARCHAR(50)	VARCHAR(30)	DECIMAL(8,2)	INT
-- 1	Мастер и Маргарита	Булгаков М.А.	670.99	3
-- 2	Белая гвардия	Булгаков М.А.	540.50	5
-- 3	Идиот	Достоевский Ф.М.	460.00	10
-- 4	Братья Карамазовы	Достоевский Ф.М.	799.01	3
-- 5	Игрок	Достоевский Ф.М.	480.50	10
-- 6	Стихотворения и поэмы	Есенин С.А.	650.00	15

-- Вывести информацию (автора, название и цену) о  книгах,
-- цены которых меньше или равны средней цене книг на складе.
-- Информацию вывести в отсортированном по убыванию цены виде.
-- Среднее вычислить как среднее по цене книги.

SELECT author, title, price
FROM book
WHERE price <= (
         SELECT AVG(price) 
         FROM book
      )
ORDER BY price DESC;

-- Вывести информацию (автора, название и цену) о тех книгах,
-- цены которых превышают минимальную цену книги на складе
-- не более чем на 150 рублей в отсортированном по возрастанию цены виде.

SELECT 
    author,title, price
FROM book
WHERE ABS(price - (SELECT MIN(price) FROM book)) <= 150
ORDER BY price ASC;

-- Вывести информацию (автора, книгу и количество) о тех книгах,
-- количество экземпляров которых в таблице book не дублируется.

SELECT author, title, amount
FROM book
WHERE amount IN (
        SELECT amount
        FROM book 
        GROUP BY amount
        HAVING count(amount) = 1
      )
;

-- Вывести информацию о книгах(автор, название, цена),
-- цена которых меньше самой большой из минимальных цен,
-- вычисленных для каждого автора.

SELECT author, title, price
FROM book
WHERE price < ALL (
        SELECT MAX(price) 
        FROM book 
        GROUP BY author
      );

-- Посчитать сколько и каких экземпляров книг нужно заказать поставщикам,
-- чтобы на складе стало одинаковое количество экземпляров каждой книги,
-- равное значению самого большего количества экземпляров одной книги.
-- Вывести название книги, ее автора,
-- текущее количество экземпляров на складе и
-- количество заказываемых экземпляров книг.
-- Последнему столбцу присвоить имя Заказ.
-- В результат не включать книги, которые заказывать не нужно.

SELECT title, author, amount, 
      ((SELECT MAX(amount) FROM book) - amount) AS Заказ 
FROM book
WHERE (amount <> (SELECT MAX(amount) FROM book)) ;

--Можно посмотреть, при продаже всех книг, какая книга принесет больше всего выручки, в процентах.
--Судя по результату, магазин хорошо вложился в Стихи Есенина
--
--Query result:
--+------------------+-----------------------+--------+--------+----------------+
--| author           | title                 | price  | amount | income_percent |
--+------------------+-----------------------+--------+--------+----------------+
--| Есенин С.А.      | Стихотворения и поэмы | 650.00 | 15     | 37.12          |
--| Достоевский Ф.М. | Игрок                 | 480.50 | 10     | 18.29          |
--| Достоевский Ф.М. | Идиот                 | 460.00 | 10     | 17.51          |
--| Булгаков М.А.    | Белая гвардия         | 540.50 | 5      | 10.29          |
--| Достоевский Ф.М. | Братья Карамазовы     | 799.01 | 3      | 9.13           |
--| Булгаков М.А.    | Мастер и Маргарита    | 670.99 | 3      | 7.66           |
--+------------------+-----------------------+--------+--------+----------------+

SELECT *,
    round(
        (100 * price * amount /
            (SELECT SUM(price * amount) FROM book))
        , 2) AS income_percent
FROM book
ORDER BY income_percent DESC;
